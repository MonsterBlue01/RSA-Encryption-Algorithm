CHANGELOG
=========

Version 1.0.0.0 (2022-12-12)
--------------------------
- Initial release
- Added new function `is_prime`

Version 1.0.0.1 (2022-12-16)
--------------------------
- Replace Rabin-Miller Algo.txt with Rabin-Miller Algo.jpg (the flowchart should explain the Rabin-Miller algorithm better than text)
- Added new function `gcd`
- Added new function `mod_inverse`
- Added new function `eea` (extended Euclidean algorithm)
- Added new function `mod_exp`

Version 1.0.0.1 (2022-12-19)
--------------------------
- Added new function `generate_rsa_keys`
- Optimized the `generate_prime` function
```cpp
long long generate_prime(long long min, long long max) {
    while (true) {
        long long n = rand() % (max - min + 1) + min;   // rand() is replaced by Mersenne Twister
        if (is_prime(n)) return n;
    }
}
```
- Added new function `generate_4096bit_prime`

Version 1.0.0.2 (2022-12-21)
--------------------------
- Added new function `generate_n_bit_long_prime`
    + Since the Seed remains unchanged, the generated pseudo-random numbers have no meaning (they are all the same number)
    + The time() function is used but it takes one second to generate the next random number
    + After shortening the wait time to generate the next random number, I found that sometimes the function generates the same number. However, if this happens later, you can force another different random number to be generated. So this flaw can be improved later. And after the test, it is found that if the bit number of the generated random number is large (such as 4096 and above, the probability of generating the same random number will become smaller) [but the same last two random numbers may be a bug]

Version 1.0.0.3 (2022-12-23)
--------------------------
- Added new function `find_coprime`
- All mpz_t in `generate_n_bit_long_prime` have been replaced with mpz_class (the last time I used C to write this project was mpz_t, but C++ may be more suitable to use mpz_class...)
- Added new function `generate_key_pair`

Version 1.0.0.4 (2022-12-26)
--------------------------
- Added new function `number_to_string`
- Added new function `string_to_number`
- Added new function `encrypt`
- Added new function `decrypt`
- The main function is all completed
- When decrypting, the standard input does not seem to be useful and may even make mistakes, so it was removed